pool:
  vmImage: 'VS2017-Win2016'
  
trigger:
  batch: true
  branches:
    include:
    - master
    - release/*

variables:
  mainProject: '**/src/AtleX.HaveIBeenPwned/AtleX.HaveIBeenPwned.csproj'
  unitTestProject: '**/src/AtleX.HaveIBeenPwned/AtleX.HaveIBeenPwned.Tests.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore packages'
  inputs:
    command: restore
    projects: '**/*.csproj'
    arguments: '--configuration $(build.configuration)'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: build
    projects: '**/*.sln'
    arguments: '--configuration $(buildConfiguration)'

- script: dotnet tool install dotnet-reportgenerator-globaltool --tool-path . --version 4.0.0
  displayName: 'Install report generator tool'

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: test
    projects: '$(unitTestProject)'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'

- script: .\reportgenerator "-reports:$(Build.SourcesDirectory)\**\coverage.cobertura.xml" "-targetdir:results" "-reporttypes:HTMLInline;HTMLChart"


- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: '**/*.nupkg'
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: true
    flattenFolders: true

- task: PublishCodeCoverageResults@1
  inputs:
    summaryFileLocation: $(Build.SourcesDirectory)\results\coverage.cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)\results
    codecoverageTool: cobertura

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: NuGet packages'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

    ArtifactName: 'NuGet packages'


